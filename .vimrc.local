map Q :q!<CR>
imap jj <Esc>

au BufRead,BufNewFile .vim* setfiletype shell

" Toggle sticking mode for NerdTree
nnoremap <Leader>n :let NERDTreeQuitOnOpen = 1<bar>NERDTreeToggle<CR>
nnoremap <Leader>N :let NERDTreeQuitOnOpen = 0<bar>NERDTreeToggle<CR>

let NERDTreeQuitOnOpen = 0
let g:tsuquyomi_disable_default_mappings = 1

if has('nvim')
    autocmd! BufWritePost,BufEnter * Neomake
    :tnoremap <Esc> <C-\><C-n>
    nnoremap <leader>o :below 10sp term://$SHELL<cr>i

     " Neomake
     let g:neomake_javascript_jscs_maker = {
         \ 'exe': 'jscs',
         \ 'args': ['--no-color', '--preset', 'airbnb', '--reporter', 'inline', '--esnext'],
         \ 'errorformat': '%f: line %l\, col %c\, %m',
         \ }
         let g:neomake_javascript_enabled_makers = ['jscs']
endif

" TODO: Fix those horrible conflicts
unmap H
unmap L

" Tab nav
nnoremap <C-T> :tabnew<CR><C-W>w<CR>
nnoremap <C-'> :tabprevious<CR>
nnoremap <C-\> :tabnext<CR

" VIM ONLY: Mapping C-[ fucks up the term royally in vim
" nnoremap <Leader>[ :tabprevious<CR>

" Quickly edit map keys
nnoremap <Leader>a <C-W><C-V>:e ~/.zshrc.alias<CR>

nnoremap <Leader>b :e ~/.vimrc.bundles.local<CR>
nnoremap <Leader>v :e ~/.vimrc.local<CR>
nnoremap <Leader>z :e ~/.zshrc.local<CR>
nnoremap <Leader>Z :e ~/.zshrc<CR>

au BufNew,BufRead *.ts setlocal omnifunc=javascriptcomplete#CompleteJS

" Buffer navigation
set wildchar=<Tab> wildmenu wildmode=full
set wildcharm=<C-Z>
nnoremap <F10> :b <C-Z>

nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>

" Search for visually selected text
vnoremap // y/<C-R>"<CR>
nnoremap <C-D> :t.<CR>
nnoremap <C-D> :t.<CR>

colorscheme solarized

"Search for visually selected text
vnoremap // y/<C-R>"<CR>
vnoremap ,. :cd %:p:h<CR>

"let g:UltiSnipsSnippetDirectories=["UltiSnips", "mysnippets"]
"let mapleader = ","

au BufRead,BufNewFile *.ts        setlocal filetype=typescript

if !exists("g:ycm_semantic_triggers")
   let g:ycm_semantic_triggers = {}
   endif
   let g:ycm_semantic_triggers['typescript'] = ['.']
   set completeopt-=preview
