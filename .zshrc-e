export FZF_DEFAULT_OPTS='--reverse --height 40% --border'

# Use fd for file finding (faster than ag/find)
if command -v fd &> /dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
else
    # Fallback to ag if fd not available
    export FZF_DEFAULT_COMMAND='ag -g ""'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# Use ripgrep for content search in fzf
if command -v rg &> /dev/null; then
    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --preview 'rg --color=always --line-number --no-heading --smart-case {q} {} || cat {}'"
fi
# export NVM_DIR="$HOME/.nvm"
# export PS1="%{$(iterm2_prompt_mark)%}"

export NVIM_TUI_ENABLE_TRUE_COLOR=1
export EDTIOR=/usr/local/bin/vim

if [ -f /usr/local/opt/nvm/nvm.sh ]; then
    export NVM_DIR="$HOME/.nvm"
    . "/usr/local/opt/nvm/nvm.sh"
fi

if [ hash pyeven 2>/dev/null ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)" 2&>1 > /dev/null
  eval "$(pyenv virtualenv-init -)" 2&>1 > /dev/null
fi


export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"

# eval $(thefuck --alias)

export PATH=$YARN_GLOBAL_BIN:$PATH
