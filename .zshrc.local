# eval "$(pyenv init -)"
# alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
# export ANDROID_SDK=/Users/yannvr/Library/Android/sdk
# export ANDROID_HOME=/Users/yannvr/Library/Android
# export ANDROID_HOME=$HOME/Library/Android/sdk
# export PATH=$PATH:$ANDROID_HOME/emulator
# export PATH=$PATH:$ANDROID_HOME/tools
# export PATH=$PATH:$ANDROID_HOME/tools/bin
# export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:/opt/homebrew/bin
export PYTHONWARNINGS=default

# Homebrew initialization
if [ -f "/opt/homebrew/bin/brew" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# EchoDrift setup
echodrift() {
    # Store current directory to return to it later
    ORIGINAL_DIR=$(pwd)
    HYPER_DIR="$HOME/dev/yannvr/hyper"

    # Change to hyper directory if we're not already there
    if [ "$(pwd)" != "$HYPER_DIR" ]; then
        cd "$HYPER_DIR" || { echo "Could not change to $HYPER_DIR"; return 1; }
    fi

    # Check if echodrift is already in PATH
    if ! command -v echodrift &> /dev/null; then
        # Get the directory of the echodrift project
        ECHODRIFT_DIR="$HOME/dev/yannvr/hyper/echodrift"

        if [ -d "$ECHODRIFT_DIR" ]; then
            # Check if virtual environment exists
            if [ ! -d "$ECHODRIFT_DIR/venv" ]; then
                echo "Creating virtual environment for echodrift..."
                python3 -m venv "$ECHODRIFT_DIR/venv"
            fi

            # Activate virtual environment and install in dev mode if needed
            source "$ECHODRIFT_DIR/venv/bin/activate"
            if ! pip show echodrift &> /dev/null; then
                echo "Installing echodrift in development mode..."
                pip install -e "$ECHODRIFT_DIR"
            fi
            deactivate
        else
            echo "EchoDrift directory not found at $ECHODRIFT_DIR"
            cd "$ORIGINAL_DIR"
            return 1
        fi
    fi

    # Execute echodrift with all arguments passed to this function
    command echodrift "$@"

    # Return to original directory
    cd "$ORIGINAL_DIR"
}
