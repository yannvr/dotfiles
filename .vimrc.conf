colo solarized
set background=dark         " Assume a dark background
set shell=zsh
set ignorecase
set noautochdir
set shell=zsh
set wildchar=<Tab> wildmenu wildmode=full
set wildcharm=<C-Z>
" Enable the list of buffers

" FILE BROWSING:

" Tweaks for browsing


" NOW WE CAN:
" - :edit a folder to open a file browser
" - <CR>/v/t to open in an h-split/v-split/tab
" - check |netrw-browse-maps| for more mappings

" Show just the filename
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#tabline#enabled = 1

"https://github.com/scrooloose/syntastic
set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exec = 'eslint_d'

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let FZF_DEFAULT_COMMAND = 'ag -g -U ""'
"let g:deoplete#enable_at_startup = 1

function! s:fzf_statusline()
  " Override statusline as you like
  highlight fzf1 ctermfg=161 ctermbg=251
  highlight fzf2 ctermfg=23 ctermbg=251
  highlight fzf3 ctermfg=237 ctermbg=251
  setlocal statusline=%#fzf1#\ >\ %#fzf2#fz%#fzf3#f
endfunction

autocmd! User FzfStatusLine call <SID>fzf_statusline()

map <leader>e :Lexplore<CR>


" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-j> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)

" Advanced customization using autoload functions
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'left': '15%'})

" Airline
let g:airline_theme='badwolf'
let g:session_autoload = 'no'
let g:session_autosave= 'no'

let g:multi_cursor_start_key='<F6>'

let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsEditSplit="vertical"
let g:ctrlp_map = '<c-/>'
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_start_key='<F6>'
let NERDTreeQuitOnOpen = 0
let g:deoplete#enable_at_startup = 1
let FZF_DEFAULT_COMMAND = 'ag -g -U ""'

" Custom Buffer navigation (no popup for buffer selection)

"let g:UltiSnipsSnippetDirectories=["UltiSnips", "mysnippets"]


if !exists("g:ycm_semantic_triggers")
   let g:ycm_semantic_triggers = {}
   endif
   let g:ycm_semantic_triggers['typescript'] = ['.']
   set completeopt-=preview
