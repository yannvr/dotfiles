if has('nvim')
    :tnoremap <Esc> <C-\><C-n>
    nnoremap <leader>o :below 10sp term://$SHELL<cr>i<Paste>
endif

" multiple cursors to remap
"" Map start key separately from next key
"inoremap <expr><C-l>     neocomplete#complete_common_string()
"inoremap <expr><Tab>
map <c-w>L :vertical wincmd f<CR>
map ˙ <F1>
nnoremap <Leader>m :messages<CR>

" Buffers
nnoremap … :w<CR>
nnoremap ¡ :buf1<CR>
nnoremap € :buf2<CR>
nnoremap # :buf3<CR>
nnoremap ¢ :buf4<CR>
nnoremap ∞ :buf5<CR>
nnoremap § :buf6<CR>
nnoremap ¶ :buf7<CR>
nnoremap • :buf8<CR>
nnoremap ª :buf9<CR>
nnoremap º :buf10<CR>
nnoremap <Leader>fa :set autowriteall<CR>
nnoremap <Leader>fA :set noautowriteall<CR>
nnoremap <Leader>tu :!find . -type f -iregex ".*\.js$" -not -path "./node_modules/*" -exec jsctags {} -f \; <bar> sed '/^$/d' <bar> sort > tags<CR>
nnoremap <Leader>tU :!find . -type f -iregex ".*\.js$" -exec jsctags {} -f \; \| sed '/^$/d' \| sort > tags<CR>
nnoremap <Leader>V :e ~/.vimrc<CR>
nnoremap <Leader>Z :e ~/.zshrc<CR>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>b :BufExplorerVerticalSplit <CR>
nnoremap <Leader>r :registers<CR>

" Insert one character: http://vim.wikia.com/wiki/Insert_a_single_character
nnoremap <Space> i_<Esc>r

"Vim
nnoremap <leader>R :source ~/.vimrc<CR>
nnoremap <Leader>e :Lexplore<CR>

"Sessions
"S-L
nnoremap ¬ :OpenSession<CR>
nnoremap <leader>sl :OpenSession<CR>
nnoremap <leader>sd :DeleteSession<CR>
nnoremap <leader>ss :SaveSession
nnoremap <leader>sx :SaveSession<CR>:CloseSession:q<CR>
nnoremap <leader>sc :CloseSession<CR>:q<CR>
nnoremap <Leader>sx :SaveSession<CR>:CloseSession<CR>:q<CR>
nnoremap <Leader>u :MundoToggle<CR>
nnoremap <leader>l :nohlsearch<cr>:diffupdate<cr>:syntax sync fromstart<cr><c-l>
nnoremap <space>/ :Unite -no-empty -no-resize grep<cr>
nnoremap <space>s :Unite -quick-match buffer<cr>

"IDE commands like
" S-F
nnoremap Ï :AgBuffer 

" S-f
nnoremap ƒ :Ag 
" S-o
nnoremap ø :FZF<CR>

" format
nnoremap <Leader>fn :set number<CR>
nnoremap <Leader>fs :set nonumber<CR>
nnoremap <Leader>fS :set nowrap<CR>
nnoremap <Leader>fS :set nowrap<CR>

"Buffer nav
nnoremap ı :Bdelete!<CR>
nnoremap æ :bprev<CR>
nnoremap « :bnext<CR>
nnoremap ∫ :enew<CR>

"Tab nav
nnoremap † :tabnew<CR><C-W>w<CR>
nnoremap “ :tabprevious<CR>
nnoremap ‘ :tabnext<CR>
nnoremap Ê :tabclose<CR>

nnoremap ∂ :t.<CR>
nnoremap <leader>B  :call ToggleBG()<CR>
vnoremap ,. :cd %:p:h<CR>
vnoremap // y/<C-R>"<CR>
